---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?X-API-Key=<movie_api_key>&api_key=<movie_api_key>&language=en-US&query=Shaw
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 26 Aug 2022 00:31:27 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9cefde3a3c84cc779d3c26a39c2e4430.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - zD33J6si_QTbAOb5voawE3FpJjiJK6BdmPEqiQW-YR_KyB5DE7bsLA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 26 Aug 2022 00:31:27 GMT
recorded_with: VCR 6.1.0
